#ifndef __UI_LOCAL_H__
#define __UI_LOCAL_H__

#include <string.h>
#include <limits.h>

#include "../game/q_shared.h"
#include "../renderer/tr_types.h"
#include "../qcommon/qcommon.h"
#include "ui_public.h"


// Menu Normal Text enum
typedef enum{
	MNT_NONE,

	MNT_ACCESSINGLCARS,
	MNT_CLOSINGLCARS,

	MNT_MAINMENU_TITLE,
	MNT_QUITMENU_TITLE,
	MNT_CREDITSMENU_TITLE,
	MNT_SAVEGAMEMENU_TITLE,
	MNT_NEWGAMEMENU_TITLE,
	MNT_LOADGAMEMENU_TITLE,
	MNT_CONTROLSMENU_TITLE,
	MNT_EXPLORE_TITLE,

	// Voyager Crew Menu
	MNT_VOYAGERCREW_TITLE,
	MNT_SENIORSTAFF_DESC1,
	MNT_ALPHATEAM_DESC1,
	MNT_BETATEAM_DESC1,

	MNT_CREWDATA,
	MNT_SENIOR1_DESC1,
	MNT_SENIOR1_DESC2,
	MNT_SENIOR1_DESC3,
	MNT_SENIOR1_DESC4,
	MNT_SENIOR1_DESC5,
	MNT_SENIOR1_DESC6,
	MNT_SENIOR1_DESC7,
	MNT_SENIOR1_DESC8,

	MNT_SENIOR2_DESC1,
	MNT_SENIOR2_DESC2,
	MNT_SENIOR2_DESC3,
	MNT_SENIOR2_DESC4,
	MNT_SENIOR2_DESC5,
	MNT_SENIOR2_DESC6,
	MNT_SENIOR2_DESC7,

	MNT_SENIOR3_DESC1,
	MNT_SENIOR3_DESC2,
	MNT_SENIOR3_DESC3,
	MNT_SENIOR3_DESC4,
	MNT_SENIOR3_DESC5,
	MNT_SENIOR3_DESC6,
	MNT_SENIOR3_DESC7,

	MNT_SENIOR4_DESC1,
	MNT_SENIOR4_DESC2,
	MNT_SENIOR4_DESC3,
	MNT_SENIOR4_DESC4,
	MNT_SENIOR4_DESC5,
	MNT_SENIOR4_DESC6,
	MNT_SENIOR4_DESC7,

	MNT_SENIOR5_DESC1,
	MNT_SENIOR5_DESC2,
	MNT_SENIOR5_DESC3,
	MNT_SENIOR5_DESC4,
	MNT_SENIOR5_DESC5,
	MNT_SENIOR5_DESC6,
	MNT_SENIOR5_DESC7,
	MNT_SENIOR5_DESC8,

	MNT_SENIOR6_DESC1,
	MNT_SENIOR6_DESC2,
	MNT_SENIOR6_DESC3,
	MNT_SENIOR6_DESC4,
	MNT_SENIOR6_DESC5,
	MNT_SENIOR6_DESC6,
	MNT_SENIOR6_DESC7,

	MNT_SENIOR7_DESC1,
	MNT_SENIOR7_DESC2,
	MNT_SENIOR7_DESC3,
	MNT_SENIOR7_DESC4,
	MNT_SENIOR7_DESC5,
	MNT_SENIOR7_DESC6,
	MNT_SENIOR7_DESC7,

	MNT_SENIOR8_DESC1,
	MNT_SENIOR8_DESC2,
	MNT_SENIOR8_DESC3,
	MNT_SENIOR8_DESC4,
	MNT_SENIOR8_DESC5,
	MNT_SENIOR8_DESC6,
	MNT_SENIOR8_DESC7,

	MNT_SENIOR9_DESC1,
	MNT_SENIOR9_DESC2,
	MNT_SENIOR9_DESC3,
	MNT_SENIOR9_DESC4,
	MNT_SENIOR9_DESC5,
	MNT_SENIOR9_DESC6,
	MNT_SENIOR9_DESC7,

	MNT_HAZARD1_DESC1,
	MNT_HAZARD1_DESC2,
	MNT_HAZARD1_DESC3,
	MNT_HAZARD1_DESC4,
	MNT_HAZARD1_DESC5,
	MNT_HAZARD1_DESC6,
	MNT_HAZARD1_DESC7,
	MNT_HAZARD1_DESC8,

	MNT_HAZARD2_DESC1,
	MNT_HAZARD2_DESC2,
	MNT_HAZARD2_DESC3,
	MNT_HAZARD2_DESC4,
	MNT_HAZARD2_DESC5,
	MNT_HAZARD2_DESC6,
	MNT_HAZARD2_DESC7,
	MNT_HAZARD2_DESC8,

	MNT_HAZARD3_DESC1,
	MNT_HAZARD3_DESC2,
	MNT_HAZARD3_DESC3,
	MNT_HAZARD3_DESC4,
	MNT_HAZARD3_DESC5,
	MNT_HAZARD3_DESC6,
	MNT_HAZARD3_DESC7,
	MNT_HAZARD3_DESC8,

	MNT_HAZARD4_DESC1,
	MNT_HAZARD4_DESC2,
	MNT_HAZARD4_DESC3,
	MNT_HAZARD4_DESC4,
	MNT_HAZARD4_DESC5,
	MNT_HAZARD4_DESC6,
	MNT_HAZARD4_DESC7,
	MNT_HAZARD4_DESC8,

	MNT_HAZARD5_DESC1,
	MNT_HAZARD5_DESC2,
	MNT_HAZARD5_DESC3,
	MNT_HAZARD5_DESC4,
	MNT_HAZARD5_DESC5,
	MNT_HAZARD5_DESC6,
	MNT_HAZARD5_DESC7,
	MNT_HAZARD5_DESC8,

	MNT_HAZARD6_DESC1,
	MNT_HAZARD6_DESC2,
	MNT_HAZARD6_DESC3,
	MNT_HAZARD6_DESC4,
	MNT_HAZARD6_DESC5,
	MNT_HAZARD6_DESC6,
	MNT_HAZARD6_DESC7,
	MNT_HAZARD6_DESC8,

	MNT_HAZARD7_DESC1,
	MNT_HAZARD7_DESC2,
	MNT_HAZARD7_DESC3,
	MNT_HAZARD7_DESC4,
	MNT_HAZARD7_DESC5,
	MNT_HAZARD7_DESC6,
	MNT_HAZARD7_DESC7,
	MNT_HAZARD7_DESC8,

	MNT_HAZARD2_1_DESC1,
	MNT_HAZARD2_1_DESC2,
	MNT_HAZARD2_1_DESC3,
	MNT_HAZARD2_1_DESC4,
	MNT_HAZARD2_1_DESC5,
	MNT_HAZARD2_1_DESC6,
	MNT_HAZARD2_1_DESC7,
	MNT_HAZARD2_1_DESC8,

	MNT_HAZARD2_2_DESC1,
	MNT_HAZARD2_2_DESC2,
	MNT_HAZARD2_2_DESC3,
	MNT_HAZARD2_2_DESC4,
	MNT_HAZARD2_2_DESC5,
	MNT_HAZARD2_2_DESC6,
	MNT_HAZARD2_2_DESC7,
	MNT_HAZARD2_2_DESC8,

	MNT_HAZARD2_3_DESC1,
	MNT_HAZARD2_3_DESC2,
	MNT_HAZARD2_3_DESC3,
	MNT_HAZARD2_3_DESC4,
	MNT_HAZARD2_3_DESC5,
	MNT_HAZARD2_3_DESC6,
	MNT_HAZARD2_3_DESC7,
	MNT_HAZARD2_3_DESC8,

	MNT_HAZARD2_4_DESC1,
	MNT_HAZARD2_4_DESC2,
	MNT_HAZARD2_4_DESC3,
	MNT_HAZARD2_4_DESC4,
	MNT_HAZARD2_4_DESC5,
	MNT_HAZARD2_4_DESC6,
	MNT_HAZARD2_4_DESC7,
	MNT_HAZARD2_4_DESC8,

	MNT_HAZARD2_5_DESC1,
	MNT_HAZARD2_5_DESC2,
	MNT_HAZARD2_5_DESC3,
	MNT_HAZARD2_5_DESC4,
	MNT_HAZARD2_5_DESC5,
	MNT_HAZARD2_5_DESC6,
	MNT_HAZARD2_5_DESC7,
	MNT_HAZARD2_5_DESC8,

	MNT_HAZARD2_6_DESC1,
	MNT_HAZARD2_6_DESC2,
	MNT_HAZARD2_6_DESC3,
	MNT_HAZARD2_6_DESC4,
	MNT_HAZARD2_6_DESC5,
	MNT_HAZARD2_6_DESC6,
	MNT_HAZARD2_6_DESC7,
	MNT_HAZARD2_6_DESC8,

	MNT_HAZARD2_7_DESC1,
	MNT_HAZARD2_7_DESC2,
	MNT_HAZARD2_7_DESC3,
	MNT_HAZARD2_7_DESC4,
	MNT_HAZARD2_7_DESC5,
	MNT_HAZARD2_7_DESC6,
	MNT_HAZARD2_7_DESC7,
	MNT_HAZARD2_7_DESC8,

	MNT_VIDEO_HIGH_QUALITY,
	MNT_VIDEO_NORMAL,
	MNT_VIDEO_FAST,
	MNT_VIDEO_FASTEST,
	MNT_VIDEO_CUSTOM,
	MNT_VIDEO_DRIVER_DEFAULT,
	MNT_VIDEO_DRIVER_VOODOO,
	MNT_OFF,
	MNT_ON,
	MNT_320X200,
	MNT_400X300,
	MNT_512X384,
	MNT_640X480,
	MNT_800X600,
	MNT_960X720,
	MNT_1024X768,
	MNT_1152X864,
	MNT_1280X960,
	MNT_1600X1200,
	MNT_2048X1536,
	MNT_856x480WIDE,
	MNT_DEFAULT,
	MNT_16BIT,
	MNT_32BIT,
	MNT_LIGHTMAP,
	MNT_VERTEX,
	MNT_LOW,
	MNT_MEDIUM,
	MNT_HIGH,
	MNT_VERY_HIGH,
	MNT_BILINEAR,
	MNT_TRILINEAR,

	// Video Setup Menu
	MNT_VIDEOSETUP,

	// Video Driver Menu
	MNT_VIDEODRIVER,
	MNT_VIDEODRIVERS,
	MNT_VENDOR,
	MNT_VERSION,
	MNT_RENDERER,
	MNT_PIXELFORMAT,
	MNT_EXTENSIONS,

	// Main Menu
	MNT_ALPHA,	
	MNT_STELLAR_CARTOGRAPHY,
	MNT_FEDERATION_TXT,
	MNT_CARDASSIA_TXT,
	MNT_FERENGI_TXT,
	MNT_ROMULAN_TXT,
	MNT_KLINGON_TXT,
	MNT_DOMINION_TXT,
	MNT_VOYAGER_TXT,
	MNT_BORG_TXT,
	MNT_WORMHOLE_TXT,
	MNT_GALACTICCORE_TXT,
	MNT_ALPHAQUAD_TXT,
	MNT_BETAQUAD_TXT,
	MNT_DELTAQUAD_TXT,
	MNT_GAMMAQUAD_TXT,

	// Ingame Main Menu
	MNT_INGAMEMENU_TITLE,
	MNT_HAZARDSUIT_SPECS,
	MNT_HAZARDSUIT,
	MNT_FRONT,
	MNT_BACK,
	MNT_POWER_CONVERTER_LABEL,
	MNT_COMMBADGE_LABEL,
	MNT_LOGISTICS_LABEL,
	MNT_ENERGY_PACK_LABEL,
	MNT_WAVEGENERATOR_LABEL,
	MNT_SCANNERS_LABEL,
	MNT_POUCHES_LABEL,
	MNT_BUFFER_LABEL,
	MNT_POWERCONVERTER_DESC1,
	MNT_COMMBADGE_DESC1,
	MNT_LOGISTICS_DESC1,
	MNT_ENERGY_PACK_DESC1,
	MNT_WAVEGENERATOR_DESC1,
	MNT_SCANNERS_DESC1,
	MNT_POUCHES_DESC1,
	MNT_BUFFER_DESC1,

	// For Quit Game Menu
	MNT_QUIT_ELITE_FORCE,

	MNT_BRIDGE_DESC1,
	MNT_PHASER_STRIP1_DESC1,
	MNT_TORPEDOS_DESC1,
	MNT_VENTRAL_DESC1,
	MNT_MIDHULL_DESC1,
	MNT_BUSSARD_DESC1,
	MNT_NACELLES_DESC1,
	MNT_THRUSTERS_DESC1,
	MNT_VOYAGER_DESC1,

	MNT_SHIP_SYSTEMS,

	// Credits Screen
	MNT_CREDITS,

	// For Game Options
	MNT_GAMEOPTION_LABEL,

	// Setup / Sound
	MNT_SOUND_SETUP,

	// Setup / Controls / Weapons
	MNT_WEAPONKEY_SETUP,

	// Setup / Controls / Attack/Look
	MNT_ATTACKLOOKKEY_SETUP,

	// Setup / Controls / Movement
	MNT_MOVEMENTKEYS_SETUP,

	// Setup / Controls / Commands
	MNT_COMMANDKEYS_SETUP,

	// Setup / Controls / Mouse/JoyStick
	MNT_MOUSEJOYSTICK_SETUP,
	MNT_MOUSE,
	MNT_JOYSTICK,

	// Setup / Controls / Mouse/ Other Options
	MNT_OTHEROPTIONS_SETUP,

	// New Game Screen
	MNT_WARP_CORE_STARTUP,
	MNT_GAME_DIFFICULTY,
	MNT_GENDER,

	// Load Game Screen
	MNT_LOADGAME,
	MNT_CURRENTSAVEGAMES,

	// Save Game Screen
	MNT_SAVEGAME,
	MNT_DESCRIPTION,
	MNT_CURRENTSAVEGAME,

	MNT_TRANSPORTING,
	MNT_TARGETINGSCANNERS,
	MNT_CONFIRMINGBEAMIN,
	MNT_LOCKINGPOSTION,
	MNT_SCANNINGAREA,
	MNT_INITIATINGTRANSPORT,

	// Game Options
	MNT_CROSSHAIR_NONE,


	MNT_STARTREK,
	MNT_BYRAVENSOFTWARE,
	MNT_VISITWEBSITE,

	MNT_RESTARTINGSOUND,
	MNT_SAY,

	MNT_AUTOSAVE,


	MNT_ENTER_CDKEY,
	MNT_VALID_CDKEY	,
	MNT_CDKEY_INVALID,

	MNT_SHORTCUT_KEY,

	MNT_SHORTCUT_SCORES,
	MNT_SHORTCUT_USE,
	MNT_SHORTCUT_RUNWALK,
	MNT_SHORTCUT_WALKFORWARD,
	MNT_SHORTCUT_BACKPEDAL,
	MNT_SHORTCUT_STEPLEFT,
	MNT_SHORTCUT_STEPRIGHT,
	MNT_SHORTCUT_UPJUMP,
	MNT_SHORTCUT_DOWNCROUCH,
	MNT_SHORTCUT_TURNLEFT,
	MNT_SHORTCUT_TURNRIGHT,
	MNT_SHORTCUT_SIDESTEPTURN,
	MNT_SHORTCUT_LOOKUP,
	MNT_SHORTCUT_LOOKDOWN,
	MNT_SHORTCUT_MOUSELOOK,
	MNT_SHORTCUT_CENTERVIEW,
	MNT_SHORTCUT_ZOOMVIEW,
	MNT_SHORTCUT_WEAPON1,
	MNT_SHORTCUT_WEAPON2,
	MNT_SHORTCUT_WEAPON3,
	MNT_SHORTCUT_WEAPON4,
	MNT_SHORTCUT_WEAPON5,
	MNT_SHORTCUT_WEAPON6,
	MNT_SHORTCUT_WEAPON7,
	MNT_SHORTCUT_WEAPON8,
	MNT_SHORTCUT_WEAPON9,
	MNT_SHORTCUT_WEAPON10,
	MNT_SHORTCUT_ATTACK,
	MNT_SHORTCUT_ALTATTCK,
	MNT_SHORTCUT_PREVWEAPON,
	MNT_SHORTCUT_NEXTWEAPON,
	MNT_SHORTCUT_GESTURE,
	MNT_SHORTCUT_DIE,
	MNT_SHORTCUT_CHAT,
	MNT_SHORTCUT_CHATTEAM,
	MNT_SHORTCUT_CHATTARGET,
	MNT_SHORTCUT_CHATATTACKER,
	MNT_SHORTCUT_AFFIRMATIVE,
	MNT_SHORTCUT_NEGATIVE,
	MNT_SHORTCUT_ADVANCE,
	MNT_SHORTCUT_REGROUP,
	MNT_SHORTCUT_HOLDPOSITION,
	MNT_SHORTCUT_RETREAT,
	MNT_SHORTCUT_HELP,
	MNT_SHORTCUT_MISSIONINFO,
	MNT_SHORTCUT_CONSOLE,

	MNT_SAVE_WARNING1,
	MNT_SAVE_WARNING2,
	MNT_SAVE_WARNING3,

	MNT_DEFAULT_SETUP,

	MNT_DEFAULT_WARNING1,
	MNT_DEFAULT_WARNING2,
	MNT_DEFAULT_WARNING3,

	MNT_DEFAULT_WARNING4,
	MNT_DEFAULT_WARNING5,

	MNT_FONTS_DEVELOPER,
	MNT_CDKEY,

	MNT_LEAVEGAME_WARNING1,

	MNT_ENGLISH,
	MNT_GERMAN,

	MNT_CINEMATIC,

	MNT_LEADSDEPT,
	MNT_LEADNAME1,
	MNT_LEADTITLE1,
	MNT_LEADNAME2,
	MNT_LEADTITLE2,
	MNT_LEADNAME3,
	MNT_LEADTITLE3,
	MNT_LEADNAME4,
	MNT_LEADTITLE4,
	MNT_LEADNAME5,
	MNT_LEADTITLE5,
	MNT_LEADNAME6,
	MNT_LEADTITLE6,
	MNT_LEADNAME7,
	MNT_LEADTITLE7,

	MNT_ARTDEPT,
	MNT_ARTNAME1,
	MNT_ARTTITLE1,
	MNT_ARTNAME2,
	MNT_ARTTITLE2,
	MNT_ARTNAME3,
	MNT_ARTTITLE3,
	MNT_ARTNAME4,
	MNT_ARTTITLE4,
	MNT_ARTNAME5,
	MNT_ARTTITLE5,
	MNT_ARTNAME6,
	MNT_ARTTITLE6,
	MNT_ARTNAME7,
	MNT_ARTTITLE7,
	MNT_ARTNAME8,
	MNT_ARTTITLE8,
	MNT_ARTNAME9,
	MNT_ARTTITLE9,

	MNT_ANIMATIONDEPT,
	MNT_ANIMNAME1,
	MNT_ANIMTITLE1,
	MNT_ANIMNAME2,
	MNT_ANIMTITLE2,
	MNT_ANIMNAME3,
	MNT_ANIMTITLE3,
	MNT_ANIMNAME4,
	MNT_ANIMTITLE4,
	MNT_ANIMNAME5,
	MNT_ANIMTITLE5,

	MNT_DESIGNERDEPT,
	MNT_DESIGNERNAME1,
	MNT_DESIGNERTITLE1,
	MNT_DESIGNERNAME2,
	MNT_DESIGNERTITLE2,
	MNT_DESIGNERNAME3,
	MNT_DESIGNERTITLE3,
	MNT_DESIGNERNAME4,
	MNT_DESIGNERTITLE4,
	MNT_DESIGNERNAME5,
	MNT_DESIGNERTITLE5,
	MNT_DESIGNERNAME6,
	MNT_DESIGNERTITLE6,
	MNT_DESIGNERNAME7,
	MNT_DESIGNERTITLE7,
	MNT_DESIGNERNAME8,
	MNT_DESIGNERTITLE8,
	MNT_DESIGNERNAME9,
	MNT_DESIGNERTITLE9,
	MNT_DESIGNERNAME10,
	MNT_DESIGNERTITLE10,
	MNT_DESIGNERNAME11,
	MNT_DESIGNERTITLE11,

	MNT_PROGRAMMINGDEPT,
	MNT_PROGRAMMERNAME1,
	MNT_PROGRAMMERTITLE1,
	MNT_PROGRAMMERNAME2,
	MNT_PROGRAMMERTITLE2,
	MNT_PROGRAMMERNAME3,
	MNT_PROGRAMMERTITLE3,
	MNT_PROGRAMMERNAME4,
	MNT_PROGRAMMERTITLE4,
	MNT_PROGRAMMERNAME5,
	MNT_PROGRAMMERTITLE5,
	MNT_PROGRAMMERNAME6,
	MNT_PROGRAMMERTITLE6,
	MNT_PROGRAMMERNAME7,
	MNT_PROGRAMMERTITLE7,
	MNT_PROGRAMMERNAME8,
	MNT_PROGRAMMERTITLE8,
	MNT_PROGRAMMERNAME9,
	MNT_PROGRAMMERTITLE9,
	MNT_PROGRAMMERNAME10,
	MNT_PROGRAMMERTITLE10,
	MNT_PROGRAMMERNAME11,
	MNT_PROGRAMMERTITLE11,
	MNT_PROGRAMMERNAME12,
	MNT_PROGRAMMERTITLE12,
	MNT_PROGRAMMERNAME13,
	MNT_PROGRAMMERTITLE13,

	MNT_SOUNDDEPT,
	MNT_SOUNDNAME1,
	MNT_SOUNDTITLE1_1,
	MNT_SOUNDTITLE1_2,
	MNT_SOUNDNAME2,
	MNT_SOUNDTITLE2_1,
	MNT_SOUNDTITLE2_2,

	MNT_SUPPORTDEPT,
	MNT_SUPPORTNAME1,
	MNT_SUPPORTTITLE1,
	MNT_SUPPORTNAME2,
	MNT_SUPPORTTITLE2_1,
	MNT_SUPPORTTITLE2_2,

	MNT_PRODUCTIONDEPT,
	MNT_PRODUCTIONNAME1,
	MNT_PRODUCTIONTITLE1,
	MNT_PRODUCTIONNAME2,
	MNT_PRODUCTIONTITLE2,
	MNT_PRODUCTIONNAME3,
	MNT_PRODUCTIONTITLE3,
	MNT_PRODUCTIONNAME4,
	MNT_PRODUCTIONTITLE4,

	MNT_CUSTOMERSUPPORTDEPT,
	MNT_CUSTOMERSUPPORTNAME1,
	MNT_CUSTOMERSUPPORTTITLE1,
	MNT_CUSTOMERSUPPORTNAME2,
	MNT_CUSTOMERSUPPORTTITLE2,

	MNT_USMARKETINGDEPT,
	MNT_USMARKETINGNAME1,
	MNT_USMARKETINGTITLE1,
	MNT_USMARKETINGNAME2,
	MNT_USMARKETINGTITLE2,
	MNT_USMARKETINGNAME3,
	MNT_USMARKETINGTITLE3_1,
	MNT_USMARKETINGTITLE3_2,
	MNT_USMARKETINGNAME4,
	MNT_USMARKETINGTITLE4_1,
	MNT_USMARKETINGTITLE4_2,

	MNT_PUBLICRELATIONSDEPT,
	MNT_PUBLICRELATIONSNAME1,
	MNT_PUBLICRELATIONSTITLE1,
	MNT_PUBLICRELATIONSNAME2,
	MNT_PUBLICRELATIONSTITLE2_1,
	MNT_PUBLICRELATIONSTITLE2_2,

	MNT_FRANCEMARKETINGDEPT,
	MNT_FRANCEMARKETINGNAME1,
	MNT_FRANCEMARKETINGTITLE1,
	MNT_FRANCEMARKETINGNAME2,
	MNT_FRANCEMARKETINGTITLE2,
	MNT_FRANCEMARKETINGNAME3,
	MNT_FRANCEMARKETINGTITLE3,

	MNT_INTERNATIONALDEPT,
	MNT_INTERNATIONALNAME1,
	MNT_INTERNATIONALTITLE1_1,
	MNT_INTERNATIONALTITLE1_2,
	MNT_INTERNATIONALNAME2,
	MNT_INTERNATIONALTITLE2_1,
	MNT_INTERNATIONALTITLE2_2,
	MNT_INTERNATIONALNAME3,
	MNT_INTERNATIONALTITLE3,
	MNT_INTERNATIONALNAME4,
	MNT_INTERNATIONALTITLE4,
	MNT_INTERNATIONALNAME5,
	MNT_INTERNATIONALTITLE5_1,
	MNT_INTERNATIONALTITLE5_2,
	MNT_INTERNATIONALNAME6,
	MNT_INTERNATIONALTITLE6,

	MNT_LOCALIZATIONDEPT,
	MNT_LOCALIZATIONNAME1,
	MNT_LOCALIZATIONTITLE1_1,
	MNT_LOCALIZATIONTITLE1_2,
	MNT_LOCALIZATIONNAME2,
	MNT_LOCALIZATIONTITLE2,
	MNT_LOCALIZATIONNAME3,
	MNT_LOCALIZATIONTITLE3,
	MNT_LOCALIZATIONNAME4,
	MNT_LOCALIZATIONTITLE4,

	MNT_CODERELEASEDEPT,
	MNT_CODERELEASENAME1,
	MNT_CODERELEASETITLE1,
	MNT_CODERELEASENAME2,

	MNT_COMPATABILITYDEPT,
	MNT_COMPATABILITYNAME1,

	MNT_NETWORKLABDEPT,
	MNT_NETWORKLABNAME1,

	MNT_MISDEPT,
	MNT_MISNAME1,
	MNT_MISNAME2,
	MNT_MISNAME3,
	MNT_MISNAME4,
	MNT_MISNAME5,
	MNT_MISNAME6,
	MNT_MISNAME7,
	MNT_MISNAME8,
	MNT_MISNAME9,
	MNT_MISNAME10,

	MNT_QADEPT,
	MNT_QANAME1,
	MNT_QATITLE1,
	MNT_QANAME2,
	MNT_QATITLE2,
	MNT_QANAME3,
	MNT_QATITLE3,
	MNT_QANAME4,
	MNT_QATITLE4,
	MNT_QANAME5,
	MNT_QATITLE5,
	MNT_QANAME6,
	MNT_QATITLE6,
	MNT_QANAME7,
	MNT_QATITLE7,
	MNT_QANAME8,
	MNT_QATITLE8,

	MNT_INSTALLERDEPT,
	MNT_INSTALLERNAME1,
	MNT_INSTALLERNAME2,

	MNT_MANUALDEPT,
	MNT_MANUALNAME1,
	MNT_MANUALTITLE1,

	MNT_VIACOMPARAMOUNTLIASONS,
	MNT_LIASONS,
	MNT_LIASONSNAME1,
	MNT_LIASONSTITLE1_1,
	MNT_LIASONSTITLE1_2,
	MNT_LIASONSNAME2,
	MNT_LIASONSTITLE2_1,
	MNT_LIASONSTITLE2_2,

	MNT_COMPUTERRENDEREDANIMATION,
	MNT_CREATDEPT,
	MNT_CREATNAME1,
	MNT_CREATTITLE1,
	MNT_CREATNAME2,
	MNT_CREATTITLE2,
	MNT_CREATNAME3,
	MNT_CREATTITLE3,
	MNT_CREATNAME4,
	MNT_CREATTITLE4,
	MNT_CREATNAME5,
	MNT_CREATTITLE5,
	MNT_CREATNAME6,
	MNT_CREATTITLE6,
	MNT_CREATNAME7,
	MNT_CREATTITLE7,
	MNT_CREATNAME8,
	MNT_CREATTITLE8,
	MNT_CREATNAME9,
	MNT_CREATTITLE9,
	MNT_CREATNAME10,
	MNT_CREATTITLE10,
	MNT_CREATNAME11,
	MNT_CREATTITLE11,
	
	MNT_CREATIVESERVICES,
	MNT_IGNITEDMINDS,

	MNT_DIRECTORDEPT,
	MNT_DIRECTORNAME1,

	MNT_PRODUCERDEPT,
	MNT_PRODUCERNAME1,

	MNT_VOYAGERCASTDEPT,
	MNT_VOYAGERCASTNAME1,
	MNT_VOYAGERCASTTITLE1,
	MNT_VOYAGERCASTNAME2,
	MNT_VOYAGERCASTTITLE2,
	MNT_VOYAGERCASTNAME3,
	MNT_VOYAGERCASTTITLE3,
	MNT_VOYAGERCASTNAME4,
	MNT_VOYAGERCASTTITLE4,
	MNT_VOYAGERCASTNAME5,
	MNT_VOYAGERCASTTITLE5,
	MNT_VOYAGERCASTNAME6,
	MNT_VOYAGERCASTTITLE6,
	MNT_VOYAGERCASTNAME7,
	MNT_VOYAGERCASTTITLE7,
	MNT_VOYAGERCASTNAME8,
	MNT_VOYAGERCASTTITLE8,

	MNT_ELITECASTDEPT,
	MNT_ELITECASTNAME1,
	MNT_ELITECASTTITLE1,
	MNT_ELITECASTNAME2,
	MNT_ELITECASTTITLE2,
	MNT_ELITECASTNAME3,
	MNT_ELITECASTTITLE3,
	MNT_ELITECASTNAME4,
	MNT_ELITECASTTITLE4,
	MNT_ELITECASTNAME5,
	MNT_ELITECASTTITLE5,
	MNT_ELITECASTNAME6,
	MNT_ELITECASTTITLE6,
	MNT_ELITECASTNAME7,
	MNT_ELITECASTTITLE7,
	MNT_ELITECASTNAME8,
	MNT_ELITECASTTITLE8,
	MNT_ELITECASTNAME9,
	MNT_ELITECASTTITLE9,
	MNT_ELITECASTNAME10,
	MNT_ELITECASTTITLE10,
	MNT_ELITECASTNAME11,
	MNT_ELITECASTTITLE11,
	MNT_ELITECASTNAME12,
	MNT_ELITECASTTITLE12,
	MNT_ELITECASTNAME13,
	MNT_ELITECASTTITLE13,
	MNT_ELITECASTNAME14,
	MNT_ELITECASTTITLE14,
	MNT_ELITECASTNAME15,
	MNT_ELITECASTTITLE15,
	MNT_ELITECASTNAME16,
	MNT_ELITECASTTITLE16,
	MNT_ELITECASTNAME17,
	MNT_ELITECASTTITLE17,
	MNT_ELITECASTNAME18,
	MNT_ELITECASTTITLE18,
	MNT_ELITECASTNAME19,
	MNT_ELITECASTTITLE19,
	MNT_ELITECASTNAME20,
	MNT_ELITECASTTITLE20,
	MNT_ELITECASTNAME21,
	MNT_ELITECASTTITLE21,
	MNT_ELITECASTNAME22,
	MNT_ELITECASTTITLE22,
	MNT_ELITECASTNAME23,
	MNT_ELITECASTTITLE23,
	MNT_ELITECASTNAME24,
	MNT_ELITECASTTITLE24,
	MNT_ELITECASTNAME25,
	MNT_ELITECASTTITLE25,
	MNT_ELITECASTNAME26,
	MNT_ELITECASTTITLE26,
	MNT_ELITECASTNAME27,
	MNT_ELITECASTTITLE27,
	MNT_ELITECASTNAME28,
	MNT_ELITECASTTITLE28,

	MNT_CASTINGDEPT,
	MNT_CASTINGNAME1,
	MNT_CASTINGTITLE1,
	MNT_CASTINGNAME2,
	MNT_CASTINGTITLE2,
	MNT_CASTINGNAME3,
	MNT_CASTINGTITLE3,
	MNT_CASTINGNAME4,
	MNT_CASTINGTITLE4,

	MNT_RECORDEDATDEPT,
	MNT_RECORDEDATNAME1,
	MNT_RECORDEDATNAME2,
	MNT_RECORDEDATNAME3,

	MNT_SPECIALTHANKS,

	MNT_VIACOM,

	MNT_VIACOMDEPT,
	MNT_VIACOMNAME1,
	MNT_VIACOMNAME2,
	MNT_VIACOMNAME3,
	MNT_VIACOMNAME4,
	MNT_VIACOMNAME5,
	MNT_VIACOMNAME6,
	MNT_VIACOMNAME7,

	MNT_ACTIVISIONDEPT,
	MNT_ACTIVISIONNAME1,
	MNT_ACTIVISIONNAME2,
	MNT_ACTIVISIONNAME3,
	MNT_ACTIVISIONNAME4,
	MNT_ACTIVISIONNAME5,
	MNT_ACTIVISIONNAME6,

	MNT_CONSULTANT,
	MNT_CONSULTANTNAME1,
	MNT_CONSULTANTTITLE1_1,
	MNT_CONSULTANTTITLE1_2,

	MNT_VERYSPECIALTHANKSDEPT,
	MNT_VERSPECIALTNAME1,

	MNT_XSPECIALTHANKSDEPT,
	MNT_XSPECIALTNAME1,
	MNT_XSPECIALTTITLE1,
	MNT_XSPECIALTNAME2,
	MNT_XSPECIALTTITLE2,
	MNT_XSPECIALTNAME3,
	MNT_XSPECIALTTITLE3,
	MNT_XSPECIALTNAME4,
	MNT_XSPECIALTTITLE4,
	MNT_XSPECIALTNAME5,
	MNT_XSPECIALTTITLE5,
	MNT_XSPECIALTNAME6,
	MNT_XSPECIALTTITLE6,
	MNT_XSPECIALTNAME7,
	MNT_XSPECIALTTITLE7,
	MNT_XSPECIALTNAME8,
	MNT_XSPECIALTTITLE8,
	MNT_XSPECIALTNAME9,
	MNT_XSPECIALTTITLE9,
	MNT_XSPECIALTNAME10,
	MNT_XSPECIALTTITLE10,
	MNT_XSPECIALTNAME11,
	MNT_XSPECIALTTITLE11,

	MNT_FANSITEDEPT,
	MNT_FANSITENAME1,
	MNT_FANSITETITLE1,
	MNT_FANSITENAME2,
	MNT_FANSITETITLE2,
	MNT_FANSITENAME3,
	MNT_FANSITETITLE3,
	MNT_FANSITENAME4,
	MNT_FANSITETITLE4,
	MNT_FANSITENAME5,
	MNT_FANSITETITLE5,

	MNT_RESISTANCEISFUTILE,
	MNT_FORMOREINFO,

	MNT_FRENCH,
	MNT_SHORTCUT_USE_ITEM,
	MNT_PARAMOUNT_LEGAL,
	MNT_ID_LEGAL,


	MNT_DEMOSCR1_LINE1,
	MNT_DEMOSCR1_LINE2,
	MNT_DEMOSCR1_LINE3,
	MNT_DEMOSCR1_LINE4,
	
	MNT_DEMOSCR2_LINE1,
	MNT_DEMOSCR2_LINE2,
	MNT_DEMOSCR2_LINE3,
	MNT_DEMOSCR2_LINE4,
	
	MNT_DEMOSCR3_LINE1,
	MNT_DEMOSCR3_LINE2,
	MNT_DEMOSCR3_LINE3,
	MNT_DEMOSCR3_LINE4,
	MNT_DEMOSCR3_LINE5,
	MNT_DEMOSCR3_LINE6,
	
	MNT_DEMOSCR4_LINE1,
	MNT_DEMOSCR4_LINE2,
	MNT_DEMOSCR4_LINE3,

	MNT_DEMOSCR5_LINE1,
	MNT_DEMOSCR5_LINE2,
	MNT_DEMOSCR5_LINE3,
	MNT_DEMOSCR5_LINE4,

	MNT_DEMOSCR6_LINE1,
	MNT_DEMOSCR6_LINE2,
	MNT_DEMOSCR6_LINE3,
	MNT_DEMOSCR6_LINE4,
	MNT_DEMOSCR6_LINE5,
	MNT_DEMOSCR6_LINE6,
	MNT_DEMOSCR6_LINE7,
	
	MNT_SAFE,
	MNT_BEST,

	MNT_OR,

	MNT_HAZARD2_FEMALE_DESC1,
	MNT_HAZARD2_FEMALE_DESC2,
	MNT_HAZARD2_FEMALE_DESC3,
	MNT_HAZARD2_FEMALE_DESC4,
	MNT_HAZARD2_FEMALE_DESC5,
	MNT_HAZARD2_FEMALE_DESC6,
	MNT_HAZARD2_FEMALE_DESC7,
	MNT_HAZARD2_FEMALE_DESC8,

	MNT_XSPECIALTNAME12,
	MNT_XSPECIALTTITLE12_1,
	MNT_XSPECIALTTITLE12_2,

	MNT_BACKSPACE,
	MNT_ACCESSING,

	MNT_GAMMA_LINE1,
	MNT_GAMMA_LINE2,
	MNT_GAMMA_LINE3,

	MNT_INITIALSETUP_TITLE,
	MNT_INITIALSETUP,

	MNT_AS, 
	MNT_RAVENSOFTWARE,
	MNT_CONFIRMATIONMENU_TITLE,
	MNT_CONFIRMATION,
	MNT_INSERTCD,
	MNT_VOCALTALENTS,
	MNT_ANDTHANKSTO,
	MNT_ISA,
	MNT_RAVENSACTIVISION,
	MNT_PRODUCTION,
	MNT_FEATURING,
	MNT_SHORTCUT_SAVEGAME,
	MNT_SHORTCUT_LOADGAME,
	MNT_QUICKKEYS_SETUP,
	MNT_SHORTCUT_AUTOSAVEGAME,
	MNT_SHORTCUT_MISSIONANALYSIS,
	MNT_LEANLEFT,
	MNT_LEANRIGHT,
	MNT_PROGRAMMERNAME14,
	MNT_PROGRAMMERTITLE14,
	MNT_SOUNDNAME3,
	MNT_SOUNDTITLE3_1,
	MNT_SOUNDTITLE3_2,
	MNT_ARTNAME10,
	MNT_ARTTITLE10,

	MNT_XSPECIALTNAME13,
	MNT_XSPECIALTNAME14,
	MNT_VIACOMNAME9,
	MNT_XSPECIALTITLE13,
	MNT_THISWILLRESETMENU,
	MNT_GAMMA2_LINE1,
	MNT_GAMMA2_LINE2,

	MNT_CUSTOMERSUPPORTNAME3,
	MNT_CUSTOMERSUPPORTTITLE3,
	MNT_INTERNATIONALNAME7,
	MNT_INTERNATIONALTITLE1_7,
	MNT_INTERNATIONALNAME8,
	MNT_INTERNATIONALTITLE1_8,
	MNT_INTERNATIONALNAME9,
	MNT_INTERNATIONALTITLE1_9,
	MNT_QANAME9,
	MNT_QATITLE9,
	MNT_QANAME10,
	MNT_QATITLE10,
	MNT_QANAME11,
	MNT_QATITLE11,
	MNT_QANAME12,
	MNT_QATITLE12,
	MNT_QANAME13,
	MNT_QATITLE13,
	MNT_QANAME14,
	MNT_QATITLE14,
	MNT_QANAME15,
	MNT_QATITLE15,
	MNT_QANAME16,
	MNT_QATITLE16,
	MNT_QANAME17,
	MNT_QATITLE17,
	MNT_QANAME18,
	MNT_QATITLE18,
	MNT_QANAME19,
	MNT_QATITLE19,
	MNT_QANAME20,
	MNT_QATITLE20,
	MNT_QANAME21,
	MNT_QATITLE21,
	MNT_MISNAME11,

	MNT_OPENINGCREDITSDEPT,
	MNT_OPENINGCREDITS,
	MNT_OPENINGCREDITS_NAME,
	MNT_OPENINGCREDITS_TITLE1,
	MNT_OPENINGCREDITS_TITLE2,

	MNT_LOGOSEQUENCEDEPT,
	MNT_LOGOSEQUENCE,
	MNT_LOGOSEQUENCE_NAME,

	MNT_IGNITEDMINDS_NAME1,
	MNT_IGNITEDMINDS_TITLE1,
	MNT_IGNITEDMINDS_NAME2,
	MNT_IGNITEDMINDS_TITLE2,
	MNT_IGNITEDMINDS_NAME3,
	MNT_IGNITEDMINDS_TITLE3,

	MNT_ACTIVISIONNAME7,
	MNT_ACTIVISIONNAME8,
	MNT_ACTIVISIONNAME9,
	MNT_ACTIVISIONNAME10,
	MNT_ACTIVISIONNAME11,

	MNT_XSPECIALTNAME15,
	MNT_XSPECIALTNAME16,
	MNT_XSPECIALTNAME17,
	MNT_XSPECIALTNAME18,

	MNT_XSPECIALTNAME19,
	MNT_XSPECIALTTITLE19,
	MNT_XSPECIALTNAME20,
	MNT_XSPECIALTTITLE20,
	MNT_XSPECIALTNAME21,
	MNT_XSPECIALTTITLE21,
	MNT_ACTIVISIONNAME12,
	MNT_ACTIVISIONNAME13,

	MNT_LOOSEVIDSETTINGS,

	MNT_QANAME22,
	MNT_QATITLE22,
	MNT_QANAME23,
	MNT_QATITLE23,
	MNT_QANAME24,
	MNT_QATITLE24,
	MNT_QANAME25,
	MNT_QATITLE25,
	MNT_QATESTERS,
	MNT_PRODUCERTITLE1,
	MNT_CUSTOMERSUPPORTNAME4,
	MNT_USMARKETINGNAME5,
	MNT_USMARKETINGTITLE5_1,
	MNT_USMARKETINGTITLE5_2,
	MNT_COMPATABILITYNAME2,
	MNT_ACTIVISIONNAME14,
	MNT_ATTEMPTINGWIPE,
	MNT_QANAME26,
	MNT_A3DNOTAVAILABLE,

	MNT_GERMAN_DIRECTORDEPT,
	MNT_GERMAN_DIRECTORNAME1,

	MNT_GERMAN_PRODUCERDEPT,
	MNT_GERMAN_PRODUCERNAME1,

	MNT_GERMAN_VOYAGERCASTDEPT,
	MNT_GERMAN_VOYAGERCASTNAME1,
	MNT_GERMAN_VOYAGERCASTTITLE1,
	MNT_GERMAN_VOYAGERCASTNAME2,
	MNT_GERMAN_VOYAGERCASTTITLE2,
	MNT_GERMAN_VOYAGERCASTNAME3,
	MNT_GERMAN_VOYAGERCASTTITLE3,
	MNT_GERMAN_VOYAGERCASTNAME4,
	MNT_GERMAN_VOYAGERCASTTITLE4,
	MNT_GERMAN_VOYAGERCASTNAME5,
	MNT_GERMAN_VOYAGERCASTTITLE5,
	MNT_GERMAN_VOYAGERCASTNAME6,
	MNT_GERMAN_VOYAGERCASTTITLE6,
	MNT_GERMAN_VOYAGERCASTNAME7,
	MNT_GERMAN_VOYAGERCASTTITLE7,
	MNT_GERMAN_VOYAGERCASTNAME8,
	MNT_GERMAN_VOYAGERCASTTITLE8,

	MNT_GERMAN_ELITECASTDEPT,
	MNT_GERMAN_ELITECASTNAME1,
	MNT_GERMAN_ELITECASTTITLE1,
	MNT_GERMAN_ELITECASTNAME2,
	MNT_GERMAN_ELITECASTTITLE2,
	MNT_GERMAN_ELITECASTNAME3,
	MNT_GERMAN_ELITECASTTITLE3,
	MNT_GERMAN_ELITECASTNAME4,
	MNT_GERMAN_ELITECASTTITLE4,
	MNT_GERMAN_ELITECASTNAME5,
	MNT_GERMAN_ELITECASTTITLE5,
	MNT_GERMAN_ELITECASTNAME6,
	MNT_GERMAN_ELITECASTTITLE6,
	MNT_GERMAN_ELITECASTNAME7,
	MNT_GERMAN_ELITECASTTITLE7,
	MNT_GERMAN_ELITECASTNAME8,
	MNT_GERMAN_ELITECASTTITLE8,
	MNT_GERMAN_ELITECASTNAME9,
	MNT_GERMAN_ELITECASTTITLE9,
	MNT_GERMAN_ELITECASTNAME10,
	MNT_GERMAN_ELITECASTTITLE10,
	MNT_GERMAN_ELITECASTNAME11,
	MNT_GERMAN_ELITECASTTITLE11,
	MNT_GERMAN_ELITECASTNAME12,
	MNT_GERMAN_ELITECASTTITLE12,
	MNT_GERMAN_ELITECASTNAME13,
	MNT_GERMAN_ELITECASTTITLE13,
	MNT_GERMAN_ELITECASTNAME14,
	MNT_GERMAN_ELITECASTTITLE14,
	MNT_GERMAN_ELITECASTNAME15,
	MNT_GERMAN_ELITECASTTITLE15,
	MNT_GERMAN_ELITECASTNAME16,
	MNT_GERMAN_ELITECASTTITLE16,
	MNT_GERMAN_ELITECASTNAME17,
	MNT_GERMAN_ELITECASTTITLE17,
	MNT_GERMAN_ELITECASTNAME18,
	MNT_GERMAN_ELITECASTTITLE18,
	MNT_GERMAN_ELITECASTNAME19,
	MNT_GERMAN_ELITECASTTITLE19,
	MNT_GERMAN_ELITECASTNAME20,
	MNT_GERMAN_ELITECASTTITLE20,
	MNT_GERMAN_ELITECASTNAME21,
	MNT_GERMAN_ELITECASTTITLE21,
	MNT_GERMAN_ELITECASTNAME22,
	MNT_GERMAN_ELITECASTTITLE22,
	MNT_GERMAN_ELITECASTNAME23,
	MNT_GERMAN_ELITECASTTITLE23,
	MNT_GERMAN_ELITECASTNAME24,
	MNT_GERMAN_ELITECASTTITLE24,
	MNT_GERMAN_ELITECASTNAME25,
	MNT_GERMAN_ELITECASTTITLE25,
	MNT_GERMAN_ELITECASTNAME26,
	MNT_GERMAN_ELITECASTTITLE26,
	MNT_GERMAN_ELITECASTNAME27,
	MNT_GERMAN_ELITECASTTITLE27,
	MNT_GERMAN_ELITECASTNAME28,
	MNT_GERMAN_ELITECASTTITLE28,

	MNT_GERMAN_CASTINGDEPT,
	MNT_GERMAN_CASTINGNAME1,
	MNT_GERMAN_CASTINGTITLE1,
	MNT_GERMAN_CASTINGNAME2,
	MNT_GERMAN_CASTINGTITLE2,
	MNT_GERMAN_CASTINGNAME3,

	MNT_GERMAN_RECORDEDATDEPT,
	MNT_GERMAN_RECORDEDATNAME1,

	MNT_GERMANACTORS1,
	MNT_GERMANACTORS2,
	MNT_MODS,
	MNT_MODS_TITLE,
	MNT_AVAILABLEMODS,
	MNT_ELITEFORCE,
	MNT_TURBOLIFT,
	MNT_HOLODECK,
	MNT_STARDATE,
	MNT_PERSONALLOG,
	MNT_TITLE,
	MNT_TRANSPORTER1,
	MNT_TOPICS,
	MNT_LIBRARYSTATION,
	MNT_ASTROMETRICS,
	MNT_TOURVOYAGER,
	MNT_MEDICALLOG,
	MNT_TEAMMEMBERS,
	MNT_LEVELS,
	MNT_SPECFICYDECK,
	MNT_TACTICAL,
	MNT_PHASERS,
	MNT_PHOTONTORPEDOES,
	MNT_RECIPES,
	MNT_SOCIALCALENDAR,
	MNT_VV_ENGAGE_WARNING1,
	MNT_VV_ENGAGE_WARNING2,
	MNT_MEDICAL,
	MNT_DATA,
	MNT_BORGSLAYER,
	MNT_TOURMENU_TITLE,
	MNT_TOURMENU_BY,
	MNT_TOURSAVEWARN1,
	MNT_TOURSAVEWARN2,
	MNT_TOURSAVEWARN3,
	MNT_SITE,
	MNT_TOURLOADWARN1,
	MNT_VOYAGERCASTNAME9,
	MNT_VOYAGERCASTTITLE9,
	MNT_CANNOTSAVE,
	MNT_MAX

} menuNormalTextType_t;

extern char *menu_normal_text[MNT_MAX];


// Menu Button Text enum
typedef enum{
	MBT_NONE,
	MBT_NEWGAME,
	MBT_LOADGAME,
	MBT_SETUP,
	MBT_EXPLOREVGER,
	MBT_CREDITS,
	MBT_QUIT,
	MBT_VOYAGERCREW,

	// Ingame Main Menu
	MBT_SAVEGAME,
	MBT_IMLOADGAME,
	MBT_POWERCONV,
	MBT_COMMBADGE,
	MBT_LOGISTICS,
	MBT_ENERGY_PACK,
	MBT_WAVEGENERATOR,
	MBT_SCANNERS,
	MBT_POUCHES,
	MBT_BUFFER,
	MBT_QUITGAME,
	MBT_EXITPROG,

	MBT_INGAMEMENU,

	// Loadgame Menu
	MBT_LOADGAMEDATA,

	// Savegame Menu
	MBT_SAVEGAMEDATA,
	MBT_DELETEGAMEDATA,
	MBT_SAVEGAMELINE,

	// Main Menu 
	MBT_FEDERATION_LABEL,
	MBT_CARDASSIA_LABEL,
	MBT_FERENGI_LABEL,
	MBT_ROMULAN_LABEL,
	MBT_KLINGON_LABEL,
	MBT_DOMINION_LABEL,
	MBT_VOYAGER_LABEL1,
	MBT_VOYAGER_LABEL2,
	MBT_BORG_LABEL1,
	MBT_BORG_LABEL2,
	MBT_WORMHOLE_LABEL1,
	MBT_WORMHOLE_LABEL2,
	MBT_GALACTICCORE_LABEL,

	MBT_ALPHA,
	MBT_BETA,
	MBT_DELTA,
	MBT_GAMMA,
	MBT_QUADRANT,

	MBT_V_PHASER_LABEL,
	MBT_V_TORPEDOS_LABEL,
	MBT_V_TORPEDOS_LABEL2,
	MBT_V_TORPEDOS_LABEL3,
	MBT_V_VENTRAL_LABEL,
	MBT_V_MIDHULL_LABEL,
	MBT_V_MIDHULL_LABEL2,
	MBT_V_BUSSARD_LABEL,
	MBT_V_NACELLES_LABEL,
	MBT_V_THRUSTERS_LABEL,
	MBT_V_VOYAGER_LABEL,
	MBT_V_BRIDGE_LABEL,

	MBT_EASY,
	MBT_MEDIUM,
	MBT_HARD,
	MBT_MALE,
	MBT_FEMALE,
	MBT_ENGAGE,
	MBT_MAINMENU,
	MBT_VIDEOSETTINGS,
	MBT_CONTROLS,
	MBT_SOUNDSETTINGS,
	MBT_GAMEOPTIONS,
	MBT_CDKEY,
	MBT_FONTS,
	MBT_FONTSSMALL,
	MBT_FONTSMEDIUM,
	MBT_FONTSLARGE,
	MBT_WEAPONKEYS,
	MBT_COMMANDKEYS,
	MBT_LOOKKEYS,
	MBT_MOVEMENTKEYS,
	MBT_MOUSECONFIG,
	MBT_OTHEROPTIONS,
	MBT_LOADCONFIG,
	MBT_SAVECONFIG,
	MBT_QUITGAME_YES,
	MBT_QUITGAME_NO,
	MBT_VIDEOOPTIONS,
	MBT_VIDEODRIVER,
	MBT_VIDEOGLEXTENTIONS,
	MBT_VIDEOMODE,
	MBT_VIDEOCOLORDEPTH,
	MBT_VIDEOFULLSCREEN,
	MBT_VIDEOLIGHTING,
	MBT_VIDEOGEOMETRY,
	MBT_VIDEOTEXTUREDETAIL,
	MBT_VIDEOTEXTUREBITS,
	MBT_VIDEOTEXTUREFILTER,
	MBT_VIDEOAPPLYCHANGES,
	MBT_VIDEODATA,
	MBT_VIDEODATA2,
	MBT_VIDEODRIVERS,

	//	Video 2 Data
	MBT_BRIGHTNESS,
	MBT_INTENSITY,
	MBT_SCREENSIZE,

	// Voyager Crew
	MBT_SENIORDATA,
	MBT_HAZARDDATA,
	MBT_ALPHASQUAD,
	MBT_BETASQUAD,
	MBT_CREWMENDATA,
	MBT_JANEWAY,
	MBT_CHAKOTAY,
	MBT_TUVOK,
	MBT_TORRES,
	MBT_PARIS,
	MBT_KIM,
	MBT_DOCTOR,
	MBT_SEVEN,
	MBT_NEELIX,

	MBT_FOSTER,
	MBT_MUNRO,
	MBT_CHANG,
	MBT_BIESSMAN,
	MBT_MURPHY,
	MBT_CHELL,
	MBT_JUROT,
	MBT_CUERVO,
	MBT_LATHROP,
	MBT_ODELL,
	MBT_CSATLOS,
	MBT_JAWORSKI,
	MBT_NELSON,
	MBT_LAIRD,

	// Setup/ Controls / Mouse Config
	MBT_MOUSEFREELOOK,
	MBT_MOUSESPEED,
	MBT_MOUSEINVERT,
	MBT_MOUSESMOOTH,
	MBT_JOYSTICKENABLE,
	MBT_JOYSTICKTHRESHOLD,
	MBT_FORCEFEEDBACK,

	// Setup/ Controls / Other Options
	MBT_ALWAYSRUN,
	MBT_LOOKSPRING,
	MBT_KEYTURNSPEED,
	MBT_DISABLE_ALTTAB,
	MBT_CAPTIONING,
	MBT_CONSOLE,
	MBT_AUTOSWITCHWEAPONS,

	// Setup / Sound
	MBT_EFFECTSVOLUME,
	MBT_MUSICVOLUME,
	MBT_VOICEVOLUME,
	MBT_SOUNDQUALITY,
	MBT_A3D,


	MBT_RETURNTOGAME,
	MBT_WAITFORKEY,
	MBT_ON,
	MBT_OFF,
	MBT_WALLMARKS1,
	MBT_WALLMARKS2,
	MBT_DYNAMICLIGHTS1,
	MBT_DYNAMICLIGHTS2,
	MBT_LIGHTFLARES1,
	MBT_LIGHTFLARES2,
	MBT_IDENTIFYTARGET1,
	MBT_IDENTIFYTARGET2,
	MBT_SYNCEVERYFRAME1,
	MBT_SYNCEVERYFRAME2,
	// Game Options
	MBT_CROSSHAIR,
	MBT_APPLYCHANGES1,
	MBT_APPLYCHANGES2,

	MBT_AUTOLOADGAME,
	MBT_SETDEFAULT,

	MBT_HOLOMATCH,

	MBT_SAVEYES,
	MBT_SAVENO,

	MBT_CINEMATIC_QUALITY,

	MBT_DEFAULT_NO,
	MBT_DEFAULT_YES,

	MBT_CONFIGURE,

	MBT_LEAVEGAME_NO,
	MBT_LEAVEGAME_YES,

	MBT_SUBTITLES,
	MBT_LANGUAGE,
	MBT_FONTSGRID,
	MBT_SCREENSHOT,
	MBT_RAVENSOFTWARE,
	MBT_ACTIVISION1,
	MBT_ADDITIONAL,
	MBT_VOICETALENTS,
	MBT_THANKS,

	MBT_TUTORIAL,
	MBT_BYRAVENSOFTWARE,
	MBT_LOW,
	MBT_HIGH,
	MBT_SIMPLESHADERS,
	MBT_ACCEPT,
	MBT_GENERIC_NO,
	MBT_GENERIC_YES,
	MBT_ANISOTROPICFILTERING,
	MBT_COMPRESSEDTEXTURES,
	MBT_QUICKKEYS,
	MBT_SUPEREASY,
	MBT_TEXTLANGUAGE,
	MBT_VOICELANGUAGE,
	MBT_KEYBOARDLANGUAGE,
	MBT_XAXIS,
	MBT_YAXIS,
	MBT_MODS,
	MBT_LOADMOD,
	MBT_DECK,
	MBT_RETURN,
	MBT_PROGRAM,
	MBT_PROGRAMENGAGE,
	MBT_HOLODECKRETURN,
	MBT_TOURMODE,
	MBT_PERSONALLOGRETURN,
	MBT_LEVEL1,
	MBT_LEVEL2,
	MBT_HAZARDGAMERETURN,
	MBT_COMPUTERVOICEON,
	MBT_COMPUTERVOICEOFF,
	MBT_FIREPHASERS,
	MBT_PHASERUPPER,
	MBT_PHASERLOWER,
	MBT_PHASERPORT,
	MBT_PHASERSTARBOARD,
	MBT_PHASERVENTRAL,
	MBT_FIREPHOTONS,
	MBT_PHOTONFORE,
	MBT_PHOTONAFT,
	MBT_WARPDRIVE,
	MBT_IMPULSEDRIVE,
	MBT_POWER_SENSORS,
	MBT_POWER_PHASERS,
	MBT_POWER_SHIELDS,
	MBT_POWER_ENGINES,
	MBT_POWER_ENVIRONMENT,
	MBT_POWER_MISC,
	MBT_GENERATOR1,
	MBT_GENERATOR2,
	MBT_GENERATOR3,
	MBT_AUXGENERATOR1,
	MBT_AUXGENERATOR2,
	MBT_RESUMETOUR,
	MBT_EXITTOUR,
	MBT_VIRTUALVOYAGER,
	MBT_RESUMEPROGRAM,
	MBT_QUITHOLODECK,
	MBT_TOURMENU_TEXT1,
	MBT_TOURMENU_TEXT2,
	MBT_TOURMENU_TEXT3,
	MBT_TOURMENU_TEXT4,
	MBT_TOURMENU_TEXT5,
	MBT_TOURMENU_TEXT6,
	MBT_PADDRETURN,
	MBT_VIRTUALSAVE_YES,
	MBT_VIRTUALSAVE_NO,
	MBT_MAX
} menuButtonTextType_t;

#define GRAPHIC_BUTTONRIGHT		"menu/new/bar1.tga"
#define GRAPHIC_BUTTONSLIDER	"menu/common/slider.tga"
#define GRAPHIC_SQUARE			"menu/common/square.tga"


extern char *menu_button_text[MBT_MAX][2];
#define MENU_BUTTON_MED_HEIGHT	18
#define MENU_BUTTON_MED_WIDTH	130
#define MENU_TITLE_X			611
#define MENU_TITLE_Y			24
#define MENU_DESC_X				100
#define MENU_DESC_Y				444
#define MENU_BUTTON_TEXT_X		5
#define MENU_BUTTON_TEXT_Y		1


#define MG_OFF		0
#define MG_STRING	1
#define MG_GRAPHIC	2
#define MG_NUMBER	3
#define MG_NONE		4
#define MG_VAR		5
#define MG_FADE		6


//
// ui_qmenu.c
//

#define RCOLUMN_OFFSET			( BIGCHAR_WIDTH )
#define LCOLUMN_OFFSET			(-BIGCHAR_WIDTH )

//#define BLINK_DIVISOR			600
#define PULSE_DIVISOR			75

#define SLIDER_RANGE			10
#define	MAX_EDIT_LINE			256

#define MAX_MENUDEPTH			8
#define MAX_MENUITEMS			64

#define MTYPE_SLIDER			0	
#define MTYPE_LIST				1
#define MTYPE_ACTION			2
#define MTYPE_SPINCONTROL		3
#define MTYPE_SEPARATOR  		4
#define MTYPE_FIELD				5
#define MTYPE_RADIOBUTTON		6
#define MTYPE_BITMAP			7	
#define MTYPE_TEXT				8
#define MTYPE_SCROLLLIST		9

#define QMF_LEFT_JUSTIFY		0x00000001
#define QMF_GRAYED				0x00000002
#define QMF_NUMBERSONLY			0x00000004
#define QMF_HIGHLIGHT_IF_FOCUS	0x00000008
#define QMF_BLINK				0x00000010
#define QMF_CENTER_JUSTIFY		0x00000020
#define QMF_RIGHT_JUSTIFY		0x00000040
#define QMF_HASMOUSEFOCUS		0x00000080
#define QMF_OWNERDRAW			0x00000100
#define QMF_RBONOFFSTYLE		0x00000200
#define QMF_HIGHLIGHT			0x00000400
#define QMF_MOUSEONLY			0x00000800
#define QMF_HIDDEN				0x00001000
#define QMF_SMALLFONT			0x00002000
#define QMF_INACTIVE			0x00004000
#define QMF_HIGHLIGHTIFFOCUS2	0x00008000

// callback notifications
#define QM_GOTFOCUS				1
#define QM_LOSTFOCUS			2
#define QM_ACTIVATED			3

typedef struct _tag_menuframework
{
	const char* title;
	int	cursor;
	int cursor_prev;

	int	nitems;
	void *items[MAX_MENUITEMS];

	const char *statusbar;

	void (*opening) (void);
	void (*closing) (void);
	void (*draw) (void);
	sfxHandle_t (*key) (int key);

	qboolean	wrapAround;
	qboolean	fullscreen;

	qboolean	initialized;		// Have the sturctures for this menu been initialized?
	float		openingStart;		// At what time did opening sequence start
	float		closingStart;		// At what time did closing sequence start
	float		subSeqStatus[8];	// Opening sequence done?
	int			cnt;				// Used by various menu routines in various ways
	int			descX;				// Description x pos
	int			descY;				// Description y pos
	int			listX;				// Beginning X position of list
	int			listY;				// Beginning Y position of list
	int			titleX;				// Title x pos
	int			titleY;				// Title y pos
	int			titleI;				// The title
	int			footNoteEnum;		// Footnote text
} menuframework_s;

typedef struct
{
	int type;
	const char *name;
	int	id;
	int x, y;
	int left;
	int	top;
	int	right;
	int	bottom;
	menuframework_s *parent;
	int menuPosition;
	unsigned flags;

	const char *statusbar;

	void (*callback)( void *self, int notification );
	void (*statusbarfunc)( void *self );
	void (*ownerdraw)( void *self );

} menucommon_s;

typedef struct {
	int		cursor;
	int		scroll;
	int		widthInChars;
	char	buffer[MAX_EDIT_LINE];
	int		maxchars;
	int		style;
	int		textEnum;		// Label
	int		textcolor;		// Normal color
	int		textcolor2;		// Highlight color
} field_t;

typedef struct
{
	menucommon_s generic;
	field_t		field;
} menufield_s;

typedef struct 
{
	menucommon_s generic;

	float minvalue;
	float maxvalue;
	float curvalue;

	int				focusWidth;		// For graph
	int				focusHeight;	// For graph
	int				color;			// Normal color
	int				color2;			// Highlight color
	int				shader;			// Graph shader
	int				width;			// Graph bitmap width
	int				height;			// Graph bitmap height
	char			*thumbName;		// Thumb file name
	int				thumbShader;	// THumb shader
	int				thumbWidth;		// Width of thumb graphic
	int				thumbHeight;	// Height of thumb graphic
	int				thumbColor;		// Normal color
	int				thumbColor2;	// Highlight color
	int				thumbGraphicWidth;	// Width of visible part of graphic
	char			*picName;
	int				picShader;
	int				picWidth;
	int				picHeight;
	int				picX;
	int				picY;
	int				textX;
	int				textY;
	int				textEnum;		// Label on pic
	int				textcolor;		// Normal color
	int				textcolor2;		// Highlight color

	float range;
} menuslider_s;

typedef struct
{
	menucommon_s generic;

	int	oldvalue;
	int curvalue;
	int	numitems;
	int	top;
		
	const char **itemnames;
	int		*listnames;
	int width;
	int height;
	int	columns;
	int	seperation;
	int				color;	// Normal color
	int				color2;	// Highlight color
	int				textEnum;
	int				textX;
	int				textY;
	int				textcolor;	// Normal color
	int				textcolor2;	// Highlight color
	byte			updated;	// 1 if changed
} menulist_s;

typedef struct
{
	menucommon_s generic;
	int				color;	// Normal color
	int				color2;	// Highlight color
	int				color3;	// Greyed color
	int				textEnum;
	int				textEnum2;	// If there's a second line of text
	int				textX;
	int				textY;
	int				textcolor;	// Normal color
	int				textcolor2;	// Highlight color
	int				textcolor3;	// Grayed color
	int				width;
	int				height;
	byte			updated;	// 1 if changed
} menuaction_s;

typedef struct
{
	menucommon_s generic;
} menuseparator_s;

typedef struct
{
	menucommon_s generic;
	int curvalue;
} menuradiobutton_s;

typedef struct
{
	menucommon_s	generic;
	char*			focuspic;	
	int				shader;
	int				focusshader;

	int				focusX;
	int				focusY;
	int				focusWidth;
	int				focusHeight;

	int				width;
	int				height;
	int				color;	// Normal color
	int				color2;	// Highlight color
	char			*textPtr;	//	In case an enum doesn't work
	int				textEnum;
	int				textEnum2;	// If there's a second line of text
	int				textX;
	int				textY;
	int				textcolor;	// Normal color
	int				textcolor2;	// Highlight color
	int				textStyle;	// Style of text (UI_SMALLFONT)
} menubitmap_s;

typedef struct
{
	menucommon_s generic;
	int				type;	// Type of graphic to use
	int				width;
	int				height;
	int				color;	// Normal color
	int				color2;	// Highlight color
	int				textEnum;
	int				textX;
	int				textY;
	int				textcolor;	// Normal color
	int				textcolor2;	// Highlight color
} menubutton_s;



typedef struct
{
	menucommon_s	generic;
	char*			string;			// A normal string
	int				normaltextEnum;	// Enum from normal menu text
	int				buttontextEnum;	// Enum from button text
	int				normaltextEnum2; // Enum from normal menu text
	int				buttontextEnum2; // Enum from button text
	int				normaltextEnum3; // Enum from normal menu text
	int				buttontextEnum3; // Enum from button text
	int				style;
	int				color;	// Normal color
	int				color2;	// Highlight color
	int				focusX;
	int				focusY;
	int				focusWidth;
	int				focusHeight;
} menutext_s;


typedef struct
{
	int				type;		// STRING or GRAPHIC
	float			timer;		// When it changes
	int				x;			// X position
	int				y;			// Y positon
	int				width;		// Graphic width
	int				height;		// Graphic height
	char			*file;		// File name of graphic/ text if STRING
	int				normaltextEnum;	//	Text comes from Menu_Normal_text
	int				buttontextEnum;	//  Text come from Menu_Button_text
	qhandle_t		graphic;	// Handle of graphic if GRAPHIC
	int				min;		// 
	int				max;
	int				target;		// Final value
	int				inc;
	int				style;
	int				color;		// Normal color
	void			*pointer;		// To an address
} menugraphics_s;



extern void		Menu_Cache( void );
extern void		Menu_Focus( menucommon_s *m );
extern void		Menu_AddItem( menuframework_s *menu, void *item );
extern void		Menu_AdjustCursor( menuframework_s *menu, int dir );
extern void		Menu_Center( menuframework_s *menu );
extern void		Menu_Draw( menuframework_s *menu );
extern void		*Menu_ItemAtCursor( menuframework_s *m );
extern sfxHandle_t Menu_ActivateItem( menuframework_s *s, menucommon_s* item );
extern void		Menu_SetStatusBar( menuframework_s *s, const char *string );
extern void		Menu_SlideItem( menuframework_s *s, int dir );
extern void		Menu_SetCursor( menuframework_s *s, int cursor );
sfxHandle_t		Menu_DefaultKey( menuframework_s *s, int key );
extern void Mouse_Show(void);
extern void Mouse_Hide(void);

extern sfxHandle_t	menu_in_sound;
extern sfxHandle_t	menu_move_sound;
extern sfxHandle_t	menu_out_sound;
extern sfxHandle_t	menu_buzz_sound;
extern sfxHandle_t	menu_null_sound;
extern vec4_t	menu_text_color;
extern vec4_t	menu_grayed_color;
extern vec4_t	menu_dark_color;
extern vec4_t	menu_highlight_color;
extern vec4_t	menu_red_color;
extern vec4_t	menu_black_color;
extern vec4_t	menu_dim_color;
extern vec4_t		color_black;
extern vec4_t		color_white;
extern vec4_t		color_yellow;
extern vec4_t		color_blue;
extern vec4_t		color_orange;
extern vec4_t		color_red;
extern vec4_t		color_dim;

extern int			ingameFlag;	// true when in game menu is in use

//
// ui_credits.c
//
#define UI_FADEOUT	0
#define UI_FADEIN	1

extern void UI_CreditsMenu(void);
extern void UI_ClosingCreditsMenu(int fromMenu);
extern void UI_ClosingCreditsMenu_Cache (void);

//
// ui_field.c
//
extern void	Field_Clear( field_t *edit );
extern void	Field_KeyDownEvent( field_t *edit, int key );
extern void	Field_CharEvent( field_t *edit, int ch );
extern void Field_Draw( field_t *edit, int x, int y, int width, int size,int color,int color2, qboolean showCursor );
extern void	MenuField_Init( menufield_s* m );
extern void	MenuField_Draw( menufield_s *f );


extern int s_enable_Names[];



//
// ui_confirm.c
//
void UI_ConfirmMenu( const char *question, void (*draw)( void ), void (*action)( qboolean result ) );

//
// ui_menu.c
//
extern qboolean	holoMatch;

extern void UI_MainMenu(void);
extern void UI_CustomizeControlsMenu( void );
extern void UI_InGameMenu(const char*holoFlag);
extern void UI_NewGameMenu( void );
extern void UI_TourGameMenu( void );
extern void UI_LoadGameMenu( int );
extern void UI_SaveGameMenu( int );
extern void UI_ExploreMenu( void );
extern void	UI_Setup_MenuButtons(void);
extern void UI_VideoDataMenu( void );
extern void InGame_MenuButtonsInit(menuframework_s *menu);


//
// ui_connect.c
//
extern void UI_DrawConnect( const char *servername, const char * updateInfoString );
extern void UI_DrawConnectText( const char *servername, const char * updateInfoString );
extern void UI_UpdateConnectionString( char *string );
extern void UI_UpdateConnectionMessageString( char *string );

//
// ui_controls2.c
//

#define MENU_CONTROLS				1
#define MENU_VIDEO					2
#define MENU_SOUND					3
#define MENU_GAME					4
#define MENU_CDKEY					5
#define MENU_DEFAULT				6
#define MENU_FONTS					7
#define MENU_CONTROLS_WEAPON		8
#define MENU_CONTROLS_LOOK			9
#define MENU_CONTROLS_MOVEMENT		10
#define MENU_CONTROLS_QUICKKEYS		11
#define MENU_CONTROLS_MOUSE			12
#define MENU_CONTROLS_OTHER			13
#define MENU_VIDEODATA				14


extern void UI_ControlsMenu( void );
extern void UI_SetupWeaponsMenu( void );
extern void SetupMenu_TopButtons(menuframework_s *menu,int menuType,menuaction_s *s_video_apply_action);

void UI_LeaveGameMenu( void);

//
// ui_preferences.c
//
extern void UI_GameOptionsMenu( void );
extern int s_textlanguage_Names[];
extern int s_voicelanguage_Names[];

//
// ui_cdkey.c
//
extern void UI_CDKeyMenu( void );

//
// ui_fonts.c
//
extern void UI_FontsMenu( void );

//
// ui_sound.c
//
extern void UI_SoundMenu( void);
extern float setup_menubuttons[6][2];


//
// ui_atoms.c
//

typedef struct {
	int					frametime;
	int					realtime;
	int					cursorx;
	int					cursory;
	int					menusp;
	menuframework_s*	activemenu;
	menuframework_s*	stack[MAX_MENUDEPTH];
	glconfig_t			glconfig;
	qboolean			debug;
	qhandle_t			whiteShader;
	qhandle_t			menuBackShader;
	qhandle_t			charset;
	qhandle_t			charsetProp;
	qhandle_t			charsetPropTiny;
	qhandle_t			charsetPropBig;
	qhandle_t			charsetPropGlow;
	qboolean			cursorDraw;
	qhandle_t			cursor;
	float				scalex;
	float				scaley;
	//float				bias;
	qboolean			firstdraw;

	// Common Menu Graphics
	qhandle_t			smallNumbers[10];
	qhandle_t			graphicButtonLeftEnd;			// Rounded left button end
	qhandle_t			graphicCircle;					// Solid circle
	qhandle_t			graphicCircle2;
	qhandle_t			graphicEmptyCircle2;
	qhandle_t			graphicBracket1CornerLU;		// Thin Left side upper corner

	sfxHandle_t			menu_choice1_snd;
	sfxHandle_t			menu_datadisp1_snd;
	sfxHandle_t			menu_datadisp2_snd;
	sfxHandle_t			menu_datadisp3_snd;

	qboolean			noversion;						// If 1 no version number is displayed
} uiStatic_t;

#define	MENUATOMS_MAX	256
#define	MENULAYOUT_MAX	256
#define MENULAYOUT_IDSIZE	64

typedef struct 
{
	char		atomId[MENULAYOUT_IDSIZE];	// ID of the current Atom
	int			type;			// Atom type
	int			subtype;		// Atom subtype
	int			xPos;			// X position of button
	int			yPos;			// X position of button
	int			width;			// graphic width
	int			height;			// graphic height
	int			color;			// Color of graphic
	int			color2;			// Highlight color of graphic
	char		*shader;		// Shader name
	qhandle_t	shaderHandle;	// handle of shader file
	int			textX;			// X offset of text from xPos
	int			textY;			// Y offset of text from yPos
	int			textcolor;		// Color of text on graphic
	int			textcolor2;		// Highlight color of text on graphic
	char		*text;			// Point to position in text string
	char		*text2;			// Point to position in text string
	int			flags;			//	QMF_ enum
	int			style;			//	UI_ enums
	int			eventId;		// The atoms value in menuEventIdTable[]
	int			textEnum;		// Text enum
	void		*nextAtom;		// Next atom for the menu
} menuatoms_t;

extern menuatoms_t menuatoms[MENUATOMS_MAX];

typedef struct 
{
	char		menuId[MENULAYOUT_IDSIZE];	// ID of the current Menu
	char		title[MENULAYOUT_IDSIZE];		// Menu Title text
	int			titleX;			// X position of title
	int			titleY;			// Y position of title
	int			descX;			// X position of description line
	int			descY;			// Y position of description line
	int			atomCnt;		// Atom count
	menuatoms_t	*atoms;			// String of menu atoms
} menulayout_t;

extern menulayout_t menulayout[MENULAYOUT_MAX];

// Menu Text enum
typedef enum{
	MT_NONE,
	MT_NEWGAME,
	MT_LOADGAME,
	MT_SETUP,
	MT_EXPLOREVGER,
	MT_CREDITS,
	MT_QUIT,
	MT_CREW,
	MT_MAX
} menuText_t;

extern stringID_table_t menuTextTable[];

// Menu Event enum
typedef enum{
	MEI_NONE,
	MEI_NEWGAME,
	MEI_LOADGAME,
	MEI_SETUP,
	MEI_CREW,
	MEI_CREDITS,
	MEI_QUIT,
	MEI_LABEL_FEDERATION,
	MEI_LABEL_CARDASSIAN,
	MEI_LABEL_FERENGI,
	MEI_LABEL_ROMULAN,
	MEI_LABEL_KLINGON,
	MEI_LABEL_DOMINION,
	MEI_LABEL_VOYAGER,
	MEI_LABEL_BORG,
	MEI_LABEL_WORMHOLE,
	MEI_LABEL_CORE,
	MEI_LABEL_ALPHAQUADRANT,
	MEI_LABEL_BETAQUADRANT,
	MEI_LABEL_DELTAQUADRANT,
	MEI_LABEL_GAMMAQUADRANT,
	MEI_MAX
} menuEventId_t;

extern void			MenuFrame_Cache(void);
extern void			UI_LanguageFilename(char *baseName,char *baseExtension,char *finalName);
extern void			UI_DemoEndMenu_Cache (void);
extern void			UI_LoadButtonText(void);
extern void			UI_LoadMenuText(void);
extern void			UI_MenuFrame(menuframework_s *menu);
extern void			UI_MenuFrame2(menuframework_s *menu);
extern int			UI_RandomNumbers(int max);
extern void			UI_PrecacheMenuGraphics(menugraphics_s *menuGraphics,int maxI);
extern void			UI_PreferencesMenu_Cache(void);
extern void			UI_LoadGameMenu_Cache(void);
extern void			UI_VideoDriverMenu_Cache(void);
extern void			UI_ControlsMouseJoyStick_Cache(void);
extern void			UI_CrewMenu_Cache(void);
extern void			UI_SaveGameMenu_Cache(void);
extern void			UI_FontsMenu_Cache(void);
extern void			UI_NewGameMenu_Cache(void); 
extern void			UI_SoundMenu_Cache(void);
extern void			UI_VideoDataMenu_Cache(void);
extern void			UI_Video2Menu_Cache(void);
extern void			UI_LeaveGameMenu_Cache(void);
extern void			UI_WeaponsMenu_Cache(void);
extern void			UI_RavenMenu_Cache(void);
extern void			UI_InGameMenu_Cache(void);
extern void			UI_CreditsMenu_Cache(void);
extern void			UI_ControlsOther_Cache(void);

extern void			UI_DrawNumField (int x, int y, int width, int value,int charWidth,int charHeight);
extern void			UI_PrintMenuGraphics(menugraphics_s *menuGraphics,int maxI);
extern int			UI_ProportionalStringWidth( const char* str,int style );
extern void			UI_DrawPic( float x, float y, float width, float height, char* pic );
extern void			UI_DrawNamedPic( float x, float y, float width, float height, const char *picname );
extern void			UI_DrawHandlePic( float x, float y, float w, float h, qhandle_t hShader ); 
extern void			UI_FillRect( float x, float y, float width, float height, const float *color );
extern void			UI_DrawRect( float x, float y, float width, float height, const float *color );
extern void			UI_UpdateScreen( void );
extern void			UI_SetColor( const float *rgba );
extern void			UI_LerpColor(vec4_t a, vec4_t b, vec4_t c, float t);
extern void			UI_DrawString( int x, int y, const char* str, int style, vec4_t color );
extern void			UI_DrawProportionalString( int x, int y, const char* str, int style, vec4_t color );
extern void			UI_DrawChar( int x, int y, int ch, int style, vec4_t color );
extern qboolean 	UI_CursorInRect (int x, int y, int width, int height);
extern void			UI_AdjustFrom640( float *x, float *y, float *w, float *h );
extern void			UI_DrawTextBox (int x, int y, int width, int lines);
extern void			UI_GetActiveMenu( char **menuname, qboolean *fullscreen );
extern void			UI_SetActiveMenu( const char* menuname,const char *menuID );
extern void			UI_PushMenu ( menuframework_s *menu );
extern void			UI_PopMenu (void);
extern void			UI_ForceMenuOff (void);
extern char			*UI_Argv( int arg );
extern char			*UI_Cvar_VariableString( const char *var_name );
extern void			UI_Refresh( int time );
extern void			UI_KeyEvent( int key );
extern qboolean		m_entersound;
extern uiStatic_t	uis;
extern uiimport_t	ui;
void UI_MenuFrameBottomLineEnd_Graphics (char *string,int color);


void UI_ModsMenu( void );


//
// ui_cvars.c
//
extern void InvertMouseCallback(void *s, int notification);
extern void MouseSpeedCallback( void *s, int notification );
extern void SmoothMouseCallback( void *s, int notification );
extern void GammaCallback( void *s, int notification );
extern void IntensityCallback( void *s, int notification );
extern void ScreensizeCallback( void *s, int notification );
extern void AlwaysRunCallback( void *s, int notification );
extern void AutoswitchCallback( void *s, int notification );
extern void VideoUsingLoResCallback( void *s, int notification );
extern void JoystickEnableCallback( void *s, int notification );
extern void JoystickThresholdCallback( void *s, int notification );
extern void TurnSpeedCallback( void *s, int notification );
extern void AnisotropicFilteringCallback( void *s, int notification );
extern void CompressedTextureCallback( void *s, int notification );
extern void ForcefeedBackCallback( void *s, int notification );
extern void JoyXButtonCallback( void *s, int notification );
extern void JoyYButtonCallback( void *s, int notification );

//
//	ui_turbolift
//
void UI_LogMenu(char *menuId,int screenType);
void UI_PaddMenu(char *menuId);
void UI_Padd2Menu(char *menuId);
void UI_TransporterMenu(void);
void UI_LibraryMenu(void);
void UI_AstrometricsMenu(void);
void UI_DischlerGameMenu(void);
void UI_TacticalMenu(void);
void UI_EngineeringStatusMenu(void);
void UI_NavigationMenu(void);
void UI_OpsMenu(void);
void UI_AccessingMenu(int menuType);

#endif
